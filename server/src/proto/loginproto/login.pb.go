// Code generated by protoc-gen-go. DO NOT EDIT.
// source: login.proto

/*
Package loginproto is a generated protocol buffer package.

It is generated from these files:
	login.proto

It has these top-level messages:
	CSToken
	SCToken
	CSLogin
	SCLogin
	CSRoleList
	SCRoleList
	CSLoginRole
	SCLoginRole
*/
package loginproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import proto1 "proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CSToken struct {
}

func (m *CSToken) Reset()                    { *m = CSToken{} }
func (m *CSToken) String() string            { return proto.CompactTextString(m) }
func (*CSToken) ProtoMessage()               {}
func (*CSToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SCToken struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *SCToken) Reset()                    { *m = SCToken{} }
func (m *SCToken) String() string            { return proto.CompactTextString(m) }
func (*SCToken) ProtoMessage()               {}
func (*SCToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SCToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CSLogin struct {
	Id  string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Pwd string `protobuf:"bytes,2,opt,name=pwd" json:"pwd,omitempty"`
}

func (m *CSLogin) Reset()                    { *m = CSLogin{} }
func (m *CSLogin) String() string            { return proto.CompactTextString(m) }
func (*CSLogin) ProtoMessage()               {}
func (*CSLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CSLogin) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CSLogin) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

type SCLogin struct {
	Error int32 `protobuf:"varint,1,opt,name=error" json:"error,omitempty"`
}

func (m *SCLogin) Reset()                    { *m = SCLogin{} }
func (m *SCLogin) String() string            { return proto.CompactTextString(m) }
func (*SCLogin) ProtoMessage()               {}
func (*SCLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SCLogin) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

type CSRoleList struct {
}

func (m *CSRoleList) Reset()                    { *m = CSRoleList{} }
func (m *CSRoleList) String() string            { return proto.CompactTextString(m) }
func (*CSRoleList) ProtoMessage()               {}
func (*CSRoleList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type SCRoleList struct {
	Roles []*proto1.RoleBase `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
}

func (m *SCRoleList) Reset()                    { *m = SCRoleList{} }
func (m *SCRoleList) String() string            { return proto.CompactTextString(m) }
func (*SCRoleList) ProtoMessage()               {}
func (*SCRoleList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SCRoleList) GetRoles() []*proto1.RoleBase {
	if m != nil {
		return m.Roles
	}
	return nil
}

type CSLoginRole struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CSLoginRole) Reset()                    { *m = CSLoginRole{} }
func (m *CSLoginRole) String() string            { return proto.CompactTextString(m) }
func (*CSLoginRole) ProtoMessage()               {}
func (*CSLoginRole) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CSLoginRole) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SCLoginRole struct {
	Error int32 `protobuf:"varint,1,opt,name=error" json:"error,omitempty"`
}

func (m *SCLoginRole) Reset()                    { *m = SCLoginRole{} }
func (m *SCLoginRole) String() string            { return proto.CompactTextString(m) }
func (*SCLoginRole) ProtoMessage()               {}
func (*SCLoginRole) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SCLoginRole) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func init() {
	proto.RegisterType((*CSToken)(nil), "loginproto.CSToken")
	proto.RegisterType((*SCToken)(nil), "loginproto.SCToken")
	proto.RegisterType((*CSLogin)(nil), "loginproto.CSLogin")
	proto.RegisterType((*SCLogin)(nil), "loginproto.SCLogin")
	proto.RegisterType((*CSRoleList)(nil), "loginproto.CSRoleList")
	proto.RegisterType((*SCRoleList)(nil), "loginproto.SCRoleList")
	proto.RegisterType((*CSLoginRole)(nil), "loginproto.CSLoginRole")
	proto.RegisterType((*SCLoginRole)(nil), "loginproto.SCLoginRole")
}

func init() { proto.RegisterFile("login.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8e, 0xc1, 0x4a, 0xc4, 0x30,
	0x14, 0x45, 0x69, 0x4b, 0x2c, 0x7d, 0x11, 0x95, 0xd8, 0x45, 0x11, 0xc4, 0x12, 0x11, 0x0a, 0x42,
	0x05, 0xfb, 0x07, 0x66, 0xdb, 0x55, 0xe2, 0x0f, 0xe8, 0x34, 0x0c, 0x61, 0x4a, 0x53, 0x92, 0x0c,
	0xf3, 0xfb, 0x43, 0x5e, 0x3a, 0x30, 0x8b, 0x59, 0xe5, 0xde, 0x9c, 0xcb, 0xe3, 0x00, 0x9d, 0xed,
	0xde, 0x2c, 0xfd, 0xea, 0x6c, 0xb0, 0x0c, 0xb0, 0x60, 0x7e, 0x79, 0xc6, 0xe7, 0xcb, 0x07, 0x77,
	0xdc, 0x05, 0x9f, 0x06, 0xbc, 0x82, 0x52, 0xa8, 0x5f, 0x7b, 0xd0, 0x0b, 0x7f, 0x83, 0x52, 0x09,
	0x8c, 0xac, 0x06, 0x12, 0x62, 0x68, 0xb2, 0x36, 0xeb, 0x2a, 0x99, 0x0a, 0xff, 0x8c, 0xdb, 0x31,
	0x1e, 0x64, 0x0f, 0x90, 0x9b, 0x69, 0xa3, 0xb9, 0x99, 0xd8, 0x13, 0x14, 0xeb, 0x69, 0x6a, 0x72,
	0xfc, 0x88, 0x31, 0x5d, 0x4b, 0xe3, 0x1a, 0x88, 0x76, 0xce, 0x3a, 0xdc, 0x13, 0x99, 0x0a, 0xbf,
	0x07, 0x10, 0x4a, 0xda, 0x59, 0x8f, 0xc6, 0x07, 0x3e, 0x00, 0x28, 0x71, 0x69, 0xec, 0x03, 0x88,
	0xb3, 0xb3, 0xf6, 0x4d, 0xd6, 0x16, 0x1d, 0xfd, 0x7e, 0x4c, 0xb2, 0x7d, 0xe4, 0x3f, 0x7f, 0x5e,
	0xcb, 0x44, 0xf9, 0x2b, 0xd0, 0x4d, 0x28, 0x92, 0x2b, 0xa9, 0x22, 0x4a, 0xf1, 0x77, 0xa0, 0x9b,
	0x02, 0xe2, 0x9b, 0x1a, 0xff, 0x77, 0x78, 0x7a, 0x38, 0x07, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xb7,
	0x45, 0x56, 0x37, 0x01, 0x00, 0x00,
}
