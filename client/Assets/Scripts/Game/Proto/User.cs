// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: user.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from user.proto</summary>
  public static partial class UserReflection {

    #region Descriptor
    /// <summary>File descriptor for user.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgp1c2VyLnByb3RvEgVwcm90byJlCglSb2xlSW5mb18SCgoCaWQYASABKAQS",
            "DAoEbmFtZRgCIAEoCRIOCgZnZW5kZXIYAyABKAUSCwoDam9iGAQgASgFEg0K",
            "BWxldmVsGAUgASgFEhIKCmxvZ291dFRpbWUYBiABKAMiTwoGUlBDTXNnEg8K",
            "B3Nlc3Npb24YASABKAUSDQoFbXNnSWQYAiABKAUSCwoDcmVxGAMgASgMEgsK",
            "A3JzcBgEIAEoDBILCgNlcnIYBSABKAUidAoNQWNjb3VudENyZWF0ZRIPCgdz",
            "ZXNzaW9uGAEgASgFEgsKA2VychgCIAEoBRIlCgNyZXEYAyABKAsyGC5wcm90",
            "by5BY2NvdW50Q3JlYXRlLlJlcRoeCgNSZXESCgoCaWQYASABKAkSCwoDcHdk",
            "GAIgASgJIsABCgxBY2NvdW50TG9naW4SDwoHc2Vzc2lvbhgBIAEoBRILCgNl",
            "cnIYAiABKAUSJAoDcmVxGAMgASgLMhcucHJvdG8uQWNjb3VudExvZ2luLlJl",
            "cRIkCgNyc3AYBCABKAsyFy5wcm90by5BY2NvdW50TG9naW4uUnNwGh4KA1Jl",
            "cRIKCgJpZBgBIAEoCRILCgNwd2QYAiABKAkaJgoDUnNwEh8KBXJvbGVzGAEg",
            "AygLMhAucHJvdG8uUm9sZUluZm9fIp8BCgpSb2xlQ3JlYXRlEg8KB3Nlc3Np",
            "b24YASABKAUSCwoDZXJyGAIgASgFEiIKA3JlcRgDIAEoCzIVLnByb3RvLlJv",
            "bGVDcmVhdGUuUmVxEh0KA3JzcBgEIAEoCzIQLnByb3RvLlJvbGVJbmZvXxow",
            "CgNSZXESDAoEbmFtZRgBIAEoCRIOCgZnZW5kZXIYAiABKAUSCwoDam9iGAMg",
            "ASgFIhkKC0NTUm9sZUVudGVyEgoKAmlkGAEgASgEYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RoleInfo_), global::Proto.RoleInfo_.Parser, new[]{ "Id", "Name", "Gender", "Job", "Level", "LogoutTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RPCMsg), global::Proto.RPCMsg.Parser, new[]{ "Session", "MsgId", "Req", "Rsp", "Err" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.AccountCreate), global::Proto.AccountCreate.Parser, new[]{ "Session", "Err", "Req" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Proto.AccountCreate.Types.Req), global::Proto.AccountCreate.Types.Req.Parser, new[]{ "Id", "Pwd" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.AccountLogin), global::Proto.AccountLogin.Parser, new[]{ "Session", "Err", "Req", "Rsp" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Proto.AccountLogin.Types.Req), global::Proto.AccountLogin.Types.Req.Parser, new[]{ "Id", "Pwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.AccountLogin.Types.Rsp), global::Proto.AccountLogin.Types.Rsp.Parser, new[]{ "Roles" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RoleCreate), global::Proto.RoleCreate.Parser, new[]{ "Session", "Err", "Req", "Rsp" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Proto.RoleCreate.Types.Req), global::Proto.RoleCreate.Types.Req.Parser, new[]{ "Name", "Gender", "Job" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.CSRoleEnter), global::Proto.CSRoleEnter.Parser, new[]{ "Id" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RoleInfo_ : pb::IMessage<RoleInfo_> {
    private static readonly pb::MessageParser<RoleInfo_> _parser = new pb::MessageParser<RoleInfo_>(() => new RoleInfo_());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleInfo_> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.UserReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleInfo_() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleInfo_(RoleInfo_ other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      gender_ = other.gender_;
      job_ = other.job_;
      level_ = other.level_;
      logoutTime_ = other.logoutTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleInfo_ Clone() {
      return new RoleInfo_(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 3;
    private int gender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "job" field.</summary>
    public const int JobFieldNumber = 4;
    private int job_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Job {
      get { return job_; }
      set {
        job_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 5;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "logoutTime" field.</summary>
    public const int LogoutTimeFieldNumber = 6;
    private long logoutTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LogoutTime {
      get { return logoutTime_; }
      set {
        logoutTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleInfo_ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Gender != other.Gender) return false;
      if (Job != other.Job) return false;
      if (Level != other.Level) return false;
      if (LogoutTime != other.LogoutTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (Job != 0) hash ^= Job.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (LogoutTime != 0L) hash ^= LogoutTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Gender != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Gender);
      }
      if (Job != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Job);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (LogoutTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LogoutTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      if (Job != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Job);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (LogoutTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LogoutTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleInfo_ other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      if (other.Job != 0) {
        Job = other.Job;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.LogoutTime != 0L) {
        LogoutTime = other.LogoutTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Gender = input.ReadInt32();
            break;
          }
          case 32: {
            Job = input.ReadInt32();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 48: {
            LogoutTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RPCMsg : pb::IMessage<RPCMsg> {
    private static readonly pb::MessageParser<RPCMsg> _parser = new pb::MessageParser<RPCMsg>(() => new RPCMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RPCMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.UserReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCMsg(RPCMsg other) : this() {
      session_ = other.session_;
      msgId_ = other.msgId_;
      req_ = other.req_;
      rsp_ = other.rsp_;
      err_ = other.err_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCMsg Clone() {
      return new RPCMsg(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private int session_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Session {
      get { return session_; }
      set {
        session_ = value;
      }
    }

    /// <summary>Field number for the "msgId" field.</summary>
    public const int MsgIdFieldNumber = 2;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "req" field.</summary>
    public const int ReqFieldNumber = 3;
    private pb::ByteString req_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Req {
      get { return req_; }
      set {
        req_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rsp" field.</summary>
    public const int RspFieldNumber = 4;
    private pb::ByteString rsp_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Rsp {
      get { return rsp_; }
      set {
        rsp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 5;
    private int err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RPCMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RPCMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (MsgId != other.MsgId) return false;
      if (Req != other.Req) return false;
      if (Rsp != other.Rsp) return false;
      if (Err != other.Err) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session != 0) hash ^= Session.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Req.Length != 0) hash ^= Req.GetHashCode();
      if (Rsp.Length != 0) hash ^= Rsp.GetHashCode();
      if (Err != 0) hash ^= Err.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Session != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Session);
      }
      if (MsgId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MsgId);
      }
      if (Req.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Req);
      }
      if (Rsp.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Rsp);
      }
      if (Err != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Err);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Session);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Req.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Req);
      }
      if (Rsp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Rsp);
      }
      if (Err != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Err);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RPCMsg other) {
      if (other == null) {
        return;
      }
      if (other.Session != 0) {
        Session = other.Session;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Req.Length != 0) {
        Req = other.Req;
      }
      if (other.Rsp.Length != 0) {
        Rsp = other.Rsp;
      }
      if (other.Err != 0) {
        Err = other.Err;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Session = input.ReadInt32();
            break;
          }
          case 16: {
            MsgId = input.ReadInt32();
            break;
          }
          case 26: {
            Req = input.ReadBytes();
            break;
          }
          case 34: {
            Rsp = input.ReadBytes();
            break;
          }
          case 40: {
            Err = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountCreate : pb::IMessage<AccountCreate> {
    private static readonly pb::MessageParser<AccountCreate> _parser = new pb::MessageParser<AccountCreate>(() => new AccountCreate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountCreate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.UserReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreate(AccountCreate other) : this() {
      session_ = other.session_;
      err_ = other.err_;
      req_ = other.req_ != null ? other.req_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreate Clone() {
      return new AccountCreate(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private int session_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Session {
      get { return session_; }
      set {
        session_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private int err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "req" field.</summary>
    public const int ReqFieldNumber = 3;
    private global::Proto.AccountCreate.Types.Req req_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.AccountCreate.Types.Req Req {
      get { return req_; }
      set {
        req_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountCreate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountCreate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (Err != other.Err) return false;
      if (!object.Equals(Req, other.Req)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session != 0) hash ^= Session.GetHashCode();
      if (Err != 0) hash ^= Err.GetHashCode();
      if (req_ != null) hash ^= Req.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Session != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Session);
      }
      if (Err != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Err);
      }
      if (req_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Req);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Session);
      }
      if (Err != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Err);
      }
      if (req_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Req);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountCreate other) {
      if (other == null) {
        return;
      }
      if (other.Session != 0) {
        Session = other.Session;
      }
      if (other.Err != 0) {
        Err = other.Err;
      }
      if (other.req_ != null) {
        if (req_ == null) {
          req_ = new global::Proto.AccountCreate.Types.Req();
        }
        Req.MergeFrom(other.Req);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Session = input.ReadInt32();
            break;
          }
          case 16: {
            Err = input.ReadInt32();
            break;
          }
          case 26: {
            if (req_ == null) {
              req_ = new global::Proto.AccountCreate.Types.Req();
            }
            input.ReadMessage(req_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AccountCreate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Req : pb::IMessage<Req> {
        private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Req> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Proto.AccountCreate.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req(Req other) : this() {
          id_ = other.id_;
          pwd_ = other.pwd_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req Clone() {
          return new Req(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pwd" field.</summary>
        public const int PwdFieldNumber = 2;
        private string pwd_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Pwd {
          get { return pwd_; }
          set {
            pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Req);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Req other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Pwd != other.Pwd) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Pwd.Length != 0) hash ^= Pwd.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Pwd.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Pwd);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Pwd.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Req other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Pwd.Length != 0) {
            Pwd = other.Pwd;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Pwd = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AccountLogin : pb::IMessage<AccountLogin> {
    private static readonly pb::MessageParser<AccountLogin> _parser = new pb::MessageParser<AccountLogin>(() => new AccountLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.UserReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountLogin(AccountLogin other) : this() {
      session_ = other.session_;
      err_ = other.err_;
      req_ = other.req_ != null ? other.req_.Clone() : null;
      rsp_ = other.rsp_ != null ? other.rsp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountLogin Clone() {
      return new AccountLogin(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private int session_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Session {
      get { return session_; }
      set {
        session_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private int err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "req" field.</summary>
    public const int ReqFieldNumber = 3;
    private global::Proto.AccountLogin.Types.Req req_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.AccountLogin.Types.Req Req {
      get { return req_; }
      set {
        req_ = value;
      }
    }

    /// <summary>Field number for the "rsp" field.</summary>
    public const int RspFieldNumber = 4;
    private global::Proto.AccountLogin.Types.Rsp rsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.AccountLogin.Types.Rsp Rsp {
      get { return rsp_; }
      set {
        rsp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (Err != other.Err) return false;
      if (!object.Equals(Req, other.Req)) return false;
      if (!object.Equals(Rsp, other.Rsp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session != 0) hash ^= Session.GetHashCode();
      if (Err != 0) hash ^= Err.GetHashCode();
      if (req_ != null) hash ^= Req.GetHashCode();
      if (rsp_ != null) hash ^= Rsp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Session != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Session);
      }
      if (Err != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Err);
      }
      if (req_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Req);
      }
      if (rsp_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Rsp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Session);
      }
      if (Err != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Err);
      }
      if (req_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Req);
      }
      if (rsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rsp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountLogin other) {
      if (other == null) {
        return;
      }
      if (other.Session != 0) {
        Session = other.Session;
      }
      if (other.Err != 0) {
        Err = other.Err;
      }
      if (other.req_ != null) {
        if (req_ == null) {
          req_ = new global::Proto.AccountLogin.Types.Req();
        }
        Req.MergeFrom(other.Req);
      }
      if (other.rsp_ != null) {
        if (rsp_ == null) {
          rsp_ = new global::Proto.AccountLogin.Types.Rsp();
        }
        Rsp.MergeFrom(other.Rsp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Session = input.ReadInt32();
            break;
          }
          case 16: {
            Err = input.ReadInt32();
            break;
          }
          case 26: {
            if (req_ == null) {
              req_ = new global::Proto.AccountLogin.Types.Req();
            }
            input.ReadMessage(req_);
            break;
          }
          case 34: {
            if (rsp_ == null) {
              rsp_ = new global::Proto.AccountLogin.Types.Rsp();
            }
            input.ReadMessage(rsp_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AccountLogin message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Req : pb::IMessage<Req> {
        private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Req> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Proto.AccountLogin.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req(Req other) : this() {
          id_ = other.id_;
          pwd_ = other.pwd_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req Clone() {
          return new Req(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pwd" field.</summary>
        public const int PwdFieldNumber = 2;
        private string pwd_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Pwd {
          get { return pwd_; }
          set {
            pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Req);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Req other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Pwd != other.Pwd) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Pwd.Length != 0) hash ^= Pwd.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Pwd.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Pwd);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Pwd.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Req other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Pwd.Length != 0) {
            Pwd = other.Pwd;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Pwd = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Rsp : pb::IMessage<Rsp> {
        private static readonly pb::MessageParser<Rsp> _parser = new pb::MessageParser<Rsp>(() => new Rsp());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Rsp> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Proto.AccountLogin.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rsp() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rsp(Rsp other) : this() {
          roles_ = other.roles_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rsp Clone() {
          return new Rsp(this);
        }

        /// <summary>Field number for the "roles" field.</summary>
        public const int RolesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Proto.RoleInfo_> _repeated_roles_codec
            = pb::FieldCodec.ForMessage(10, global::Proto.RoleInfo_.Parser);
        private readonly pbc::RepeatedField<global::Proto.RoleInfo_> roles_ = new pbc::RepeatedField<global::Proto.RoleInfo_>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Proto.RoleInfo_> Roles {
          get { return roles_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Rsp);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Rsp other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!roles_.Equals(other.roles_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= roles_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          roles_.WriteTo(output, _repeated_roles_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += roles_.CalculateSize(_repeated_roles_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Rsp other) {
          if (other == null) {
            return;
          }
          roles_.Add(other.roles_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                roles_.AddEntriesFrom(input, _repeated_roles_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class RoleCreate : pb::IMessage<RoleCreate> {
    private static readonly pb::MessageParser<RoleCreate> _parser = new pb::MessageParser<RoleCreate>(() => new RoleCreate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleCreate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.UserReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleCreate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleCreate(RoleCreate other) : this() {
      session_ = other.session_;
      err_ = other.err_;
      req_ = other.req_ != null ? other.req_.Clone() : null;
      rsp_ = other.rsp_ != null ? other.rsp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleCreate Clone() {
      return new RoleCreate(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private int session_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Session {
      get { return session_; }
      set {
        session_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private int err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "req" field.</summary>
    public const int ReqFieldNumber = 3;
    private global::Proto.RoleCreate.Types.Req req_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.RoleCreate.Types.Req Req {
      get { return req_; }
      set {
        req_ = value;
      }
    }

    /// <summary>Field number for the "rsp" field.</summary>
    public const int RspFieldNumber = 4;
    private global::Proto.RoleInfo_ rsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.RoleInfo_ Rsp {
      get { return rsp_; }
      set {
        rsp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleCreate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleCreate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (Err != other.Err) return false;
      if (!object.Equals(Req, other.Req)) return false;
      if (!object.Equals(Rsp, other.Rsp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session != 0) hash ^= Session.GetHashCode();
      if (Err != 0) hash ^= Err.GetHashCode();
      if (req_ != null) hash ^= Req.GetHashCode();
      if (rsp_ != null) hash ^= Rsp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Session != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Session);
      }
      if (Err != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Err);
      }
      if (req_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Req);
      }
      if (rsp_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Rsp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Session);
      }
      if (Err != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Err);
      }
      if (req_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Req);
      }
      if (rsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rsp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleCreate other) {
      if (other == null) {
        return;
      }
      if (other.Session != 0) {
        Session = other.Session;
      }
      if (other.Err != 0) {
        Err = other.Err;
      }
      if (other.req_ != null) {
        if (req_ == null) {
          req_ = new global::Proto.RoleCreate.Types.Req();
        }
        Req.MergeFrom(other.Req);
      }
      if (other.rsp_ != null) {
        if (rsp_ == null) {
          rsp_ = new global::Proto.RoleInfo_();
        }
        Rsp.MergeFrom(other.Rsp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Session = input.ReadInt32();
            break;
          }
          case 16: {
            Err = input.ReadInt32();
            break;
          }
          case 26: {
            if (req_ == null) {
              req_ = new global::Proto.RoleCreate.Types.Req();
            }
            input.ReadMessage(req_);
            break;
          }
          case 34: {
            if (rsp_ == null) {
              rsp_ = new global::Proto.RoleInfo_();
            }
            input.ReadMessage(rsp_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RoleCreate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Req : pb::IMessage<Req> {
        private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Req> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Proto.RoleCreate.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req(Req other) : this() {
          name_ = other.name_;
          gender_ = other.gender_;
          job_ = other.job_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Req Clone() {
          return new Req(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "gender" field.</summary>
        public const int GenderFieldNumber = 2;
        private int gender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Gender {
          get { return gender_; }
          set {
            gender_ = value;
          }
        }

        /// <summary>Field number for the "job" field.</summary>
        public const int JobFieldNumber = 3;
        private int job_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Job {
          get { return job_; }
          set {
            job_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Req);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Req other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Gender != other.Gender) return false;
          if (Job != other.Job) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Gender != 0) hash ^= Gender.GetHashCode();
          if (Job != 0) hash ^= Job.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Gender != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Gender);
          }
          if (Job != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Job);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Gender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
          }
          if (Job != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Job);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Req other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Gender != 0) {
            Gender = other.Gender;
          }
          if (other.Job != 0) {
            Job = other.Job;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Gender = input.ReadInt32();
                break;
              }
              case 24: {
                Job = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// 角色进入游戏
  /// </summary>
  public sealed partial class CSRoleEnter : pb::IMessage<CSRoleEnter> {
    private static readonly pb::MessageParser<CSRoleEnter> _parser = new pb::MessageParser<CSRoleEnter>(() => new CSRoleEnter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSRoleEnter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.UserReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRoleEnter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRoleEnter(CSRoleEnter other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRoleEnter Clone() {
      return new CSRoleEnter(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSRoleEnter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSRoleEnter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSRoleEnter other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
