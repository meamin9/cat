#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os, sys, re
import subprocess
import platform

workpath = sys.path[0]
proto_list = []
merge_file = 'merge.proto'

Tem = '''// Generated by cat/proto/gen_go.py
// DO NOT EDIT!

syntax = "proto3";

package proto;

'''
def merge_files():
    for root, _, files in os.walk('./'):
        for f in files:
            if not f.endswith('.proto'):
                continue
            if f == merge_file:
                continue
            proto_list.append(f)
    return
    with open('merge.proto', 'w+') as f:
        f.write(Tem)
        for name in proto_list:
            with open(name) as pf:
                f.write('// Source: {}\n'.format(name))
                c = pf.read()
                s = re.search(r'[^;]*message', c)
                if s != None:
                    f.write(c[s.start(0)+1:])
                f.write('\n\n')
    
def gen_go():
    merge_files()
    out = '../server/src/proto'
    if not os.path.exists(out):
        os.makedirs(out)
    sysstr = platform.system()
    if sysstr == 'Windows':
        suffix = '.exe'
    else:
        suffix = ''
    source = ' '.join(proto_list)
    cmd = 'protoc --plugin=protoc-gen-gogofaster=protoc-gen-gogofaster{} --gogofaster_out={} {}'.format(suffix, out, source)
    print(cmd)
    subprocess.call(cmd.split(' '))

def main():
    print(workpath)
    os.chdir(workpath)
    gen_go()
    #input('press anykey to exit')

if __name__ == '__main__':
    try:
        main()
    except:
        import traceback
        traceback.print_exc()
        input('runtime error')
